# Author: Simon Deziel <simon.deziel@gmail.com>

#include <tunables/global>

/usr/bin/ssh {
  #include <abstractions/base>
  #include <abstractions/nameservice>
  #include <abstractions/openssl>

  capability setuid,
  capability setgid,

  signal (receive) set=("int") peer=/usr/bin/scp,
  signal (receive) set=("int") peer=/usr/bin/sftp,

  /etc/ssh/ssh_config r,

  # to unlock private keys
  /dev/tty rw,
  /usr/lib/openssh/gnome-ssh-askpass mix,

  owner /dev/pts/[0-9]* rw,

  owner @{HOME}/.ssh/   rw,
  owner @{HOME}/.ssh/** rl,
  owner @{HOME}/.ssh/known_hosts rwl,
  # use with "ControlPath ~/.ssh/%r@%h:%p"
  owner @{HOME}/.ssh/*@*:[0-9]* rwl,
  # use with "ControlPath ~/.ssh/%C": a SHA1 hash of "%l%h%p%r"
  owner @{HOME}/.ssh/[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]* rwl,
  audit deny @{HOME}/.ssh/authorized_keys{,2} rw,
  audit deny @{HOME}/.ssh/config w,
  audit deny @{HOME}/.ssh/id_{dsa,rsa,ecdsa,ed25519}{,.pub} w,
  owner /tmp/ssh-*/ rw,
  owner /tmp/ssh-*/agent.@{pid} rw,
  owner /run/user/[0-9]*/keyring-*/ssh rw,
  owner @{PROC}/@{pid}/fd/ r,

  # for ProxyCommand
  /bin/ash      Cx -> proxycommand,
  /bin/bash     Cx -> proxycommand,
  /bin/bash2    Cx -> proxycommand,
  /bin/bsh      Cx -> proxycommand,
  /bin/csh      Cx -> proxycommand,
  /bin/dash     Cx -> proxycommand,
  /bin/ksh      Cx -> proxycommand,
  /bin/sh       Cx -> proxycommand,
  /bin/tcsh     Cx -> proxycommand,
  /bin/zsh      Cx -> proxycommand,
  /bin/zsh4     Cx -> proxycommand,
  /bin/zsh5     Cx -> proxycommand,
  /usr/bin/ssh rm,

  # XXX: not allowing "/bin/nc" as "ssh -W" is functionally equivalent
  profile proxycommand {
    #include <abstractions/base>

    /bin/ash      rm,
    /bin/bash     rm,
    /bin/bash2    rm,
    /bin/bsh      rm,
    /bin/csh      rm,
    /bin/dash     rm,
    /bin/ksh      rm,
    /bin/sh       rm,
    /bin/tcsh     rm,
    /bin/zsh      rm,
    /bin/zsh4     rm,
    /bin/zsh5     rm,
    /usr/bin/ssh Px,

    # unlocking the key is done by the parent so why is this needed?
    /dev/tty rw,
  }

  #include <local/usr.bin.ssh>
}
